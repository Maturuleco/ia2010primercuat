import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.FilenameFilter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

public class Main {

	public static void main(String[] args) throws Exception {
		
		System.out.println(" ~ INICIO Procesamiento de comentarios ~" );
		
		String sourcePath = "C:\\Documents and Settings\\csanchez\\Desktop\\Dtodo\\mio\\ia\\";
		File commentfolder = new File(sourcePath + "comments\\");
		File[] commentFiles = commentfolder.listFiles(new FileListFilter("yaml"));
		File dataSetResult = new File(sourcePath + "/comments.csv"); // para weka
		
		if (commentFiles == null) {
			throw new Exception("No se pudo encontrar el path: " + sourcePath);
		}
		
		FileWriter fstream;
		BufferedWriter out;
		try {
			fstream = new FileWriter(dataSetResult);
			out = new BufferedWriter(fstream);
			List<Comment> restoComments = new LinkedList<Comment>();
			
			for (int j = 0; j < commentFiles.length; j++) {
				File restoComment = commentFiles[j];
				System.out.print("por procesar "+ j +": " + restoComment.getName() +"\n");
				
	    		restoComments.addAll(ParserComments.generateComment(restoComment));
			}
			
			writeDic(dataSetResult);
			
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		System.out.println(" ~ FIN Procesamiento de comentarios ~" );
	}
	

	private static void writeDic(File dataSetResult) {
		HashMap<String, Integer> dic = ParserComments.getDic();
		
		for (Iterator it = dic.entrySet().iterator(); it.hasNext();) {
			String key = (String) it.next();
			
			
		}
		
		
	}


	static class FileListFilter implements FilenameFilter {
		private String extension; 

		public FileListFilter(String extension) {
		  this.extension = extension;
		}
		
		public boolean accept(File directory, String filename) {
		  boolean fileOK = true;
		  if (extension != null) {
		    fileOK &= filename.endsWith('.' + extension);
		  }
		  return fileOK;
		}
	}

}
